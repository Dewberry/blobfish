@prefix aorc: <https://raw.githubusercontent.com/Dewberry/blobfish/v0.9/semantics/rdf/aorc.ttl> .
@prefix dash: <http://datashapes.org/dash#> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix locn: <http://www.w3.org/ns/locn#> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix shapes: <https://raw.githubusercontent.com/Dewberry/blobfish/v0.9/semantics/shacl/aorc-shapes.ttl> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# Ensure all AORC datasets have a distribution, have a modification datetime, have a spatial resolution in meters, and have a temporal coverage
shapes:AORCDatasetShape
    a sh:NodeShape ;
    sh:targetClass aorc:CompositeDataset ;
    sh:targetClass aorc:MirrorDataset ;
    sh:targetClass aorc:SourceDataset ;
    sh:targetClass aorc:TranspositionDataset ;
    sh:property [
        sh:path dcat:distribution ;
        sh:class dcat:Distribution ;
        sh:minCount 1 ;
    ] ;
    sh:property [
        sh:path dcat:modified ;
        sh:datatype xsd:dateTime ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path dcat:spatialResolutionInMeters ;
        sh:datatype xsd:float ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path dct:temporal ;
        sh:class dct:PeriodOfTime ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] .

# Ensure command lists have only strings in them
shapes:CommandListShape
    a sh:NodeShape ;
    sh:targetClass aorc:CommandList ;
    sh:property [
        sh:path rdf:first ;
        sh:datatype xsd:string ;
        sh:pattern "^\\S+$" ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path rdf:rest ;
        sh:or (
            [ sh:class aorc:CommandList ]
            [ sh:path rdf:nil ]
        ) ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] .

# Ensure that composite datasets have at least one source mirror dataset
shapes:CompositeDatasetShape
    a sh:NodeShape ;
    sh:targetClass aorc:CompositeDataset ;
    sh:property [
        sh:path dct:source ;
        sh:class aorc:MirrorDataset ;
        sh:minCount 1 ;
    ] .

# Ensure that docker compose statements have a docker image
shapes:DockerComposeShape
    a sh:NodeShape ;
    sh:targetClass aorc:DockerCompose ;
    sh:property [
        sh:path dct:source ;
        sh:class aorc:DockerImage ;
        sh:minCount 1 ;
    ] .

# Ensure that docker containers have a docker compose statement
shapes:DockerContainerShape
    a sh:NodeShape ;
    sh:targetClass aorc:DockerContainer ;
    sh:property [
        sh:path prov:wasStartedBy ;
        sh:class aorc:DockerCompose ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] .

# Ensure that datasets generated by docker processes are associated with a docker process
shapes:DockerGeneratedDatasetShape
    a sh:NodeShape ;
    sh:targetClass aorc:CompositeDataset ;
    sh:targetClass aorc:MirrorDataset ;
    sh:targetClass aorc:TranspositionDataset ;
    sh:property [
        sh:path prov:wasGeneratedBy ;
        sh:class aorc:DockerProcess ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] .

# Ensure that docker processes have a command list and a container
shapes:DockerProcessShape
    a sh:NodeShape ;
    sh:targetClass aorc:DockerProcess ;
    sh:property [
        sh:path prov:wasStartedBy ;
        sh:class aorc:CommandList ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path prov:used ;
        sh:class aorc:DockerContainer ;
        sh:minCount 1 ;
    ] .

# Ensure that docker compose statements and docker images are linked to repositories and have a digest hash indicating the state of the repo
shapes:RepositoryResourceShape
    a sh:NodeShape ;
    sh:targetClass aorc:DockerCompose ;
    sh:targetClass aorc:DockerImage ;
    sh:property [
        sh:path schema:sha256 ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:codeRepository ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] .

# Ensure pre-composite AORC datasets are associated with an RFC and a temporal resolution
shapes:RFCDatasetShape
    a sh:NodeShape ;
    sh:targetClass aorc:MirrorDataset ;
    sh:targetClass aorc:SourceDataset ;
    sh:property [
        sh:path aorc:hasRFC ;
        sh:class aorc:RFC ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path dcat:temporalResolution ;
        sh:datatype xsd:duration ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] .

# Ensure that RFCs have an alias, a full name, a geometry indicating spatial location, and are an organizational unit of a larger organization
shapes:RFCShape
    a sh:NodeShape ;
    sh:targetClass aorc:RFC ;
    sh:property [
        sh:path locn:geometry ;
        sh:class locn:Geometry ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path org:unitOf ;
        sh:class org:Organization ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path skos:altLabel ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path skos:prefLabel ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] .

# Ensure transposition datasets have precipitation statistics, a transposition region, a watershed region, a maximum precipitation point, and an image
shapes:TranspositionDatasetShape
    a sh:NodeShape ;
    sh:targetClass aorc:TranspositionDataset ;
    sh:property [
        sh:path aorc:normalizedMeanPrecipitation ;
        sh:datatype xsd:float ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path aorc:sumPrecipitation ;
        sh:datatype xsd:float ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path aorc:minPrecipitation ;
        sh:datatype xsd:float ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path aorc:maxPrecipitation ;
        sh:datatype xsd:float ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path aorc:meanPrecipitation ;
        sh:datatype xsd:float ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path aorc:cellCount ;
        sh:datatype xsd:integer ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path aorc:maxPrecipitationPoint ;
        sh:class dct:Location ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path aorc:transpositionRegion ;
        sh:class dct:Location ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path aorc:watershedRegion ;
        sh:class dct:Location ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path foaf:depiction ;
        sh:class foaf:image ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] .
