List of metadata (comprehensive):
- URI <http://purl.org/cld/freq/monthly> for DCTERMS.accrualPeriodicity associated with FTP DCAT.Dataset
- FTP zip download URL literal for DCAT.downloadURL associated with FTP DCAT.Distribution
- FTP last modification date for DCTERMS.modified associated with FTP DCAT.Distribution
- FTP byte size for DCAT.byteSize associated with FTP DCAT.Distribution
- URI for application/zip format <https://www.iana.org/assignments/media-types/application/zip> for DCAT.compressFormat
- URI for NETCDF format https://publications.europa.eu/resource/authority/file-type/NETCDF> for DCAT.packageFormat
- s3 dataset upload time for DCTERMS.created associated with s3 DCAT.Dataset
- s3 address with format https://{bucketName}.s3-{awsRegionName}.amazonaws.com/ for DCAT.downloadURL
- Literal string describing how access to s3 resources is restricted based on AWS credentials for DCTERMS.description associated with DCAT.RightsStatement for s3 dataset
- RFC full name for DCTERMS.title associated with RFC FOAF.Organization
- RFC alias for DCTERMS.alternative associated with RFC FOAF.Organization
- URI for homepage of RFC office with format https://weather.gov/[alias] where alias is alias of RFC office
- Script name for DCTERMS.identifier associated with script DCAT.Resource / DCAT.Software
- Literal string of commit has for DCTERMS.identifier associated with commit hash DCAT.Catalog
- URI for repo commit hash with format [repo]/blobs/[commitHash] where repo is the repository base URL and commitHash is the identifier string for DCAT.landingPage associated with commit hash DCAT.Catalog
- Base URL of git repository which has versions including commit hash for DCAT.landingPage of DCAT.Catalog for git repo
- URI of license <https://opensource.org/license/mit/> for DCTERMS.license associated with DCAT.Catalog for git repo

Pseudocode (transfer script)
- Verify FTP structure
- Download all zip files
- In transfer, include metadata which has:
	- FTP aorc_historic URL
	- FTP rfc_catalog URL (relative)
	- FTP precip_partition URL (relative)
	- FTP zip file URL (relative)
	- FTP zip last modification date
	- FTP zip byte size
	- RFC full name
	- RFC alias
	- Verified RFC homepage address
	- git repo base url
	- active commit hash

Pseudocode (parse script)
- Access mirror data from s3
- Parse metadata from objects
- Add following info retrieved when s3 objects are accessed:
	- object upload time
	- upload address in format https://{bucketName}.s3-{awsRegionName}.amazonaws.com/
- Loop through modified metadata objects
- Create literals (ftp last modification date as an XSD.dateTime instance, ftp temporal coverage as XSD.duration, ftp byte size as an XSD.positiveInteger, s3 upload time as an XSD.dateTime instance, string for access rights description associated with s3 resource, RFC title, RFC alias, script name, commit hash)
- Create URIs for properties of pseudoclasses (monthly frequency for FTP accrualPeriodicity, application/zip format for compressFormat, NETCDF format for packageFormat, s3 address for downloadURL, RFC homepage for landingPage, commit hash landingPage,  git repo landingPage, license for license)
- Create pseudoclasses (repo as catalog, script as resource / software, commit has as catalog, ftp dataset, ftp distribution, s3 dataset, s3 distribution, rfc office as organization, transfer job as activity, aorc_historic as catalog, rfc_catalog as catalog, precip_partition as catalog)
- Create properties between entities (source, wasGeneratedBy, used, creator, wasStartedBy, title, alternative, created, identifier, landingPage, license, distribution, dataset, modified, downloadURL, byteSize, keyword, compressFormat, packageFormat, isVersionOf, temporal) 

	
